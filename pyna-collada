#! /usr/bin/env python

"""Pyna-collada is a tool that draws chromosome contacts of specific pre-specified regions from a whole genome Hi-C .hic file chromosome map. Visualises the resulting contact sub-matrices in interactive html files.
"""


import argparse
import plotly
import plotly.graph_objects as go

# TODO fix the argument ranges of accepted values from straw.
# TODO arguments: Add argument for organism.
parser = argparse.ArgumentParser(
    prog="pyna_collada",
    description="Tool to visualise Hi-C contacts from gene lists of interest.",
    epilog="Authors: Costas Bouyioukos, 2019-2022, Universite Paris Cite and UMR7216.")
parser.add_argument(
    "hic",
    type=str,
    metavar="hic_file",
    help="Filename (or path) of .hic file (NO option for STDIN)")
parser.add_argument(
    "genesAnnot",
    type=argparse.FileType("r"),
    default=None,
    metavar="gene_annot_coords_file",
    help="Filename (or path) of annotation file (usually from ENSEMBL) conaining at least the gene name, gene start and end, chromosome and strand")
parser.add_argument(
    "outfile",
    type=str,
    metavar="out_file",
    help="Filename (or path) of the results .html figure file (NO option for STDOUT)")
parser.add_argument(
    "-b",
    "--bin-size",
    help="Seelction of the bin size of the hi-c map (i.e. resolution). Default=10000",
    type=int,
    default=10000,
    dest="binSize",
    metavar="bin_size")
parser.add_argument(
    "-c",
    "--chromosomes",
    nargs="+",
    default="ALL",
    help="The chromosome names(s) of which we want to extract contacts. Deafult: ALL",
    metavar="chr_number",
    dest="chr")
parser.add_argument(
    "-d",
    "--downstream-offset",
    type=int,
    default=500,
    help="The number of bps to offset down-stream of TSS for defining the overlaping regions. Default: 500",
    metavar="downstream_off",
    dest="offsetD")
parser.add_argument(
    "-u",
    "--upstream-offset",
    type=int,
    default=1000,
    help="The number of bps to offset up-stream of TSS for defining the overlaping regions. Default: 1000",
    metavar="upstream_off",
    dest="offsetU")
parser.add_argument(
    "-i",
    "--interChromosomal",
    action="store_true",
    dest="inter",
    help="Flag to turn on inter- and intra-chromosomal contacts. Default: intra-chromosomal only")
parser.add_argument(
    "-n",
    "--normalisation",
    nargs="?",
    default="NONE",
    metavar="norm_meth",
    type=str,
    help="Choise of a normalisation method from the Juice-tools or hic-straw (One of VC, VC_SQRT, KR, Default: NONE)",
    dest="norm")
parser.add_argument(
    "-t",
    "--type",
    nargs="?",
    default="BP",
    metavar="Type",
    type=str,
    help="Choise of the hic-straw extracted measure. Default: BP",
    dest="type")
parser.add_argument(
    "-v",
    "--version",
    action="version",
    version="%(prog)s  v. {version}".format(version=__version__))


# Parse the command line arguments.
optArgs = parser.parse_args()
if optArgs.chr == "ALL":
    chromosomes = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "X", "Y"]
else:
    chromosomes = optArgs.chr

exit()
